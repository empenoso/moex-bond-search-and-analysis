# üïµÔ∏è –ü–æ–∏—Å–∫ –ª–∏–∫–≤–∏–¥–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π –ú–æ—Å–±–∏—Ä–∂–∏ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º üïµÔ∏è
#
# –≠—Ç–æ—Ç Python —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –æ–±–ª–∏–≥–∞—Ü–∏–π, —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏—Ö –∑–∞–¥–∞–Ω–Ω—ã–º
# –∫—Ä–∏—Ç–µ—Ä–∏—è–º –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏, —Ü–µ–Ω—ã, –¥—é—Ä–∞—Ü–∏–∏ –∏ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏, –∏—Å–ø–æ–ª—å–∑—É—è API –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏.
# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞, –≤–∫–ª—é—á–∞—é—â–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–ª–∏–≥–∞—Ü–∏—è—Ö –∏ –ª–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π, 
# –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ Excel-—Ñ–∞–π–ª.
#
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º: pip install requests openpyxl asyncio
#
# –ê–≤—Ç–æ—Ä: –ú–∏—Ö–∞–∏–ª –®–∞—Ä–¥–∏–Ω https://shardin.name/
# –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 14.02.2025
# –í–µ—Ä—Å–∏—è: 1.3
#
# –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –≤—Å–µ–≥–¥–∞ –∑–¥–µ—Å—å: https://github.com/empenoso/moex-bond-search-and-analysis
#

import requests
import datetime
import openpyxl
import time
import inspect
import asyncio
import io
import sys  # –ò–º–ø–æ—Ä—Ç sys –¥–ª—è stdout
from openpyxl.styles import Alignment  # –î–æ–±–∞–≤–ª—è–µ–º Alignment –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏ API –∑–∞–ø—Ä–æ—Å–æ–≤, 
# —á—Ç–æ–±—ã –æ–∂–∏–¥–∞—Ç—å –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º –∏ —Å–æ–±–ª—é–¥–∞—Ç—å –ª–∏–º–∏—Ç –≤ 50 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É
API_DELAY = 1.2 # 1.2

class Tee(object):  # –ö–ª–∞—Å—Å Tee –¥–ª—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –≤ —Ñ–∞–π–ª
    def __init__(self, *files):
        self.files = files
    def write(self, obj):
        for f in self.files:
            f.write(obj)
            f.flush()  # –í–∞–∂–Ω–æ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
    def flush(self):
        for f in self.files:
            f.flush()

def get_function_name():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ—É–Ω–∫—Ü–∏–∏."""
    return inspect.stack()[1][3]

async def start():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞.
    –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ –æ–±–ª–∏–≥–∞—Ü–∏–π.
    –í –∫–æ–Ω—Ü–µ –≤—ã–≤–æ–¥–∏—Ç –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞.
    """
    start_time = datetime.datetime.now().timestamp() * 1000  # Unix Time Stamp - Epoch Converter
    print(f"üöÄ –§—É–Ω–∫—Ü–∏—è {get_function_name()} –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—É –≤ {datetime.datetime.now().strftime('%d.%m.%Y %H:%M:%S')}. \n") 

    log_output = io.StringIO()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º StringIO –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ –≤—ã–≤–æ–¥–∞
    original_stdout = sys.stdout  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥
    tee = Tee(original_stdout, log_output)  # –°–æ–∑–¥–∞–µ–º Tee, —á—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å –∏ –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –≤ log_output
    sys.stdout = tee  # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥ –≤ tee

    moex_search_bonds_result, search_conditions = await moex_search_bonds() 

    sys.stdout = original_stdout  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥ - –≤–∞–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –∏–º–µ–Ω–Ω–æ original_stdout
    log_content = log_output.getvalue()  # –ü–æ–ª—É—á–∞–µ–º –∑–∞—Ö–≤–∞—á–µ–Ω–Ω—ã–π –ª–æ–≥
    excel_log_messages = log_content.splitlines()  # –†–∞–∑–±–∏–≤–∞–µ–º –ª–æ–≥ –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è Excel

    curr_time = datetime.datetime.now().timestamp() * 1000
    duration = round((curr_time - start_time) / 1000 / 60 * 100) / 100  # –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö
    print(f"\n‚úÖ –§—É–Ω–∫—Ü–∏—è {get_function_name()} –∑–∞–∫–æ–Ω—á–∏–ª–∞ —Ä–∞–±–æ—Ç—É –≤ {datetime.datetime.now().strftime('%d.%m.%Y %H:%M:%S')}.") 
    print(f"‚è≥ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è {get_function_name()} –≤ –º–∏–Ω—É—Ç–∞—Ö: {duration}.") 

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Excel —Ñ–∞–π–ª
    excel_filename = f"bond_search_{datetime.datetime.now().strftime('%Y-%m-%d')}.xlsx"
    write_to_excel(moex_search_bonds_result, excel_log_messages, excel_filename, search_conditions)  # –ü–µ—Ä–µ–¥–∞–µ–º search_conditions 
    print(f"\nüíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø–∏—Å–∞–Ω—ã –≤ Excel —Ñ–∞–π–ª: {excel_filename}") 

    print("\n–ú–∏—Ö–∞–∏–ª –®–∞—Ä–¥–∏–Ω https://shardin.name/\n")
    
    # –í –∫–æ–Ω—Ü–µ —Å–∫—Ä–∏–ø—Ç–∞
    input("–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –≤—ã—Ö–æ–¥–∞...")


async def moex_search_bonds():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –æ–±–ª–∏–≥–∞—Ü–∏–π –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ API –ú–æ—Å–±–∏—Ä–∂–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–±–ª–∏–≥–∞—Ü–∏–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π, —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ª–æ–≥–∞ –∏ —É—Å–ª–æ–≤–∏—è –ø–æ–∏—Å–∫–∞. 
    """
    yield_more = 15  # –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    yield_less = 40  # –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    price_more = 70  # –¶–µ–Ω–∞ –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    price_less = 120  # –¶–µ–Ω–∞ –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    duration_more = 3  # –î—é—Ä–∞—Ü–∏—è –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    duration_less = 18  # –î—é—Ä–∞—Ü–∏—è –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    volume_more = 2000  # –û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –≤ –∫–∞–∂–¥—ã–π –∏–∑ n –¥–Ω–µ–π, —à—Ç. –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    bond_volume_more = 60000  # –°–æ–≤–æ–∫—É–ø–Ω—ã–π –æ–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π, —à—Ç. –±–æ–ª—å—à–µ —ç—Ç–æ–π —Ü–∏—Ñ—Ä—ã
    offer_yes_no = "–î–ê"  # –£—á–∏—Ç—ã–≤–∞—Ç—å, —á—Ç–æ–±—ã –¥–µ–Ω–µ–∂–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã –±—ã–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã –¥–æ —Å–∞–º–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è?
    # –î–ê - –æ–±–ª–∏–≥–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏ –≤—ã–ø–ª–∞—Ç—ã –∫—É–ø–æ–Ω–æ–≤
    # –ù–ï–¢ - –Ω–µ –≤–∞–∂–Ω–æ, –ø—É—Å—Ç—å –≤ –∫–∞–∫–∏–µ-—Ç–æ –¥–∞—Ç—ã –≤–º–µ—Å—Ç–æ –≤—ã–ø–ª–∞—Ç—ã –ø—Ä–æ—á–µ—Ä–∫
    conditions = f"""{yield_more}% < –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å < {yield_less}%
{price_more}% < –¶–µ–Ω–∞ < {price_less}%
{duration_more} –º–µ—Å. < –î—é—Ä–∞—Ü–∏—è < {duration_less} –º–µ—Å.
–ó–Ω–∞—á–µ–Ω–∏—è –≤—Å–µ—Ö –∫—É–ø–æ–Ω–æ–≤ –∏–∑–≤–µ—Å—Ç–Ω—ã –¥–æ —Å–∞–º–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è: {offer_yes_no}.
–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –≤ –∫–∞–∂–¥—ã–π –∏–∑ 15 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–Ω–µ–π (c {(datetime.datetime.now() - datetime.timedelta(days=15)).strftime('%d.%m.%Y')}) > {volume_more} —à—Ç.
–°–æ–≤–æ–∫—É–ø–Ω—ã–π –æ–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ 15 –¥–Ω–µ–π –±–æ–ª—å—à–µ {bond_volume_more} —à—Ç.
–ü–æ–∏—Å–∫ –≤ –¢0, –¢+, –¢+ (USD) - –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º - –±–µ–∑–∞–¥—Ä–µ—Å.
""" # –£—Å–ª–æ–≤–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ Excel
    bonds = []
    count = 0
    error_counter = 0  # –°—á—ë—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏

    board_groups = [58, 193, 105, 77, 207, 167, 245]  # https://iss.moex.com/iss/engines/stock/markets/bonds/boardgroups/
    for t in board_groups:
        url = f"https://iss.moex.com/iss/engines/stock/markets/bonds/boardgroups/{t}/securities.json?iss.dp=comma&iss.meta=off&iss.only=securities,marketdata&securities.columns=SECID,SECNAME,PREVLEGALCLOSEPRICE&marketdata.columns=SECID,YIELD,DURATION"
        print(f"üîó {get_function_name()}. –°—Å—ã–ª–∫–∞ –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π –≥—Ä—É–ø–ø—ã: {url}.") 

        time.sleep(API_DELAY)  # –ó–∞–¥–µ—Ä–∂–∫–∞ API_DELAY —Å –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ HTTP –æ—à–∏–±–∫–∏
            json_data = response.json()
        except requests.exceptions.RequestException as e:
            error_counter += 1
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {e}") 
            continue  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –≥—Ä—É–ø–ø–µ, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞

        if not json_data or not json_data.get('marketdata') or not json_data['marketdata'].get('data'):
            print(f'üìâ {get_function_name()}. –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö c –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏ –¥–ª—è –≥—Ä—É–ø–ø—ã {t}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä—É—á–Ω—É—é –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ.') 
            continue  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –≥—Ä—É–ø–ø–µ, –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö

        bond_list = json_data['securities']['data']
        count = len(bond_list)
        print(f'üìÉ {get_function_name()}. –í—Å–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ –≥—Ä—É–ø–ø—ã {t}: {count} –±—É–º–∞–≥.\n') 

        market_data = json_data['marketdata']['data']
        market_data_dict = {item[0]: item for item in market_data if item}  # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º marketdata –ø–æ SECID

        for i in range(count):
            # –µ—Å–ª–∏ –∏–∑-–∑–∞ —Å–µ—Ç–µ–≤–æ–π –æ—à–∏–±–∫–∏ —Ü–∏–∫–ª –ø—Ä–µ—Ä–≤–∞–ª—Å—è, —Ç–æ–≥–¥–∞ –ø–æ–≤—Ç–æ—Ä
            retry_count = 0  # –°—á—ë—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫
            while retry_count < 5:  # –õ–∏–º–∏—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –¥–æ 5 —Ä–∞–∑
                try:
                    bond_name = bond_list[i][1].replace('"', '').replace("'", '')
                    secid = bond_list[i][0]
                    bond_price = bond_list[i][2]

                    bond_market_data = market_data_dict.get(secid)
                    if not bond_market_data:
                        print(f"‚ùå {get_function_name()} –≤ {datetime.datetime.now().strftime('%H:%M:%S')}. –°—Ç—Ä–æ–∫–∞ {i + 1} –∏–∑ {count}: {bond_name} ({secid}): –î–∞–Ω–Ω—ã–µ –æ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –∏ –¥—é—Ä–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.") 
                        retry_count = 5
                        continue

                    bond_yield = bond_market_data[1]
                    bond_duration = bond_market_data[2] / 30 if bond_market_data[2] else 0  # –∫–æ–ª-–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –º–µ—Å—è—Ü–µ–≤, –¥–µ–ª–∏–º –Ω–∞ 30 –µ—Å–ª–∏ –µ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, –∏–Ω–∞—á–µ 0
                    bond_duration = round(bond_duration * 100) / 100

                    print(f"üîé {get_function_name()} –≤ {datetime.datetime.now().strftime('%H:%M:%S')}. –°—Ç—Ä–æ–∫–∞ {i + 1} –∏–∑ {count}: {bond_name} ({secid}): —Ü–µ–Ω–∞={bond_price}%, –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å={bond_yield}%, –¥—é—Ä–∞—Ü–∏—è={bond_duration} –º–µ—Å.") 

                    if (bond_yield is not None and yield_more <= bond_yield <= yield_less and  # —É—Å–ª–æ–≤–∏—è –≤—ã–±–æ—Ä–∫–∏
                        bond_price is not None and price_more <= bond_price <= price_less and 
                        duration_more < bond_duration < duration_less):
                        print(f"‚úÖ {get_function_name()}.   \\-> –£—Å–ª–æ–≤–∏–µ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ ({yield_more} < {bond_yield}% < {yield_less}), —Ü–µ–Ω—ã ({price_more} < {bond_price}% < {price_less}) –∏ –¥—é—Ä–∞—Ü–∏–∏ ({duration_more} < {bond_duration} –º–µ—Å. < {duration_less}) –¥–ª—è {bond_name} –ø—Ä–æ—à–ª–æ.") 
                        volume_data = await moex_search_volume(secid, volume_more)
                        bond_volume = volume_data['value']
                        print(f"üìä {get_function_name()}. \\-> –°–æ–≤–æ–∫—É–ø–Ω—ã–π –æ–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π: {bond_volume}, –∞ —É—Å–ª–æ–≤–∏–µ {bond_volume_more} —à—Ç.") 
                        if volume_data['low_liquid'] == 0 and bond_volume > bond_volume_more:  # lowLiquid: 0 –∏ 1 - –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏.
                            # ‚ùó 0 - —á—Ç–æ–±—ã –æ–±–æ—Ä–æ—Ç –±—ã–ª —Å—Ç—Ä–æ–≥–æ –±–æ–ª—å—à–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ
                            # ‚ùó 1 - —Ñ–∏–ª—å—Ç—Ä –æ–±–æ—Ä–æ—Ç–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, –≤ –≤—ã–±–æ—Ä–∫—É –ø–æ–ø–∞–¥–∞—é—Ç –≤—Å–µ –±—É–º–∞–≥–∏, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø–æ –æ—Å—Ç–∞–ª—å–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
                            payments_data = await moex_search_months_of_payments(secid)
                            months_of_payments_null = payments_data['value_rub_null']
                            is_qualified_investors = await moex_search_is_qualified_investors(secid)
                            if offer_yes_no == "–î–ê" and months_of_payments_null == 0:
                                bonds.append([bond_name, secid, is_qualified_investors, bond_price, bond_volume, bond_yield, bond_duration, payments_data['months_payment_marks']])  
                                print(f"üóìÔ∏è {get_function_name()}. –î–ª—è {bond_name} ({secid}) –≤—Å–µ –¥–∞—Ç—ã –±—É–¥—É—â–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤—ã–ø–ª–∞—Ç.") 
                                print(f'‚≠ê {get_function_name()}. –†–µ–∑—É–ª—å—Ç–∞—Ç ‚Ññ {len(bonds)}: {bonds[-1]}.') 
                            elif offer_yes_no == "–ù–ï–¢":
                                bonds.append([bond_name, secid, is_qualified_investors, bond_price, bond_volume, bond_yield, bond_duration, payments_data['months_payment_marks']])  
                                print(f'‚≠ê {get_function_name()}. –†–µ–∑—É–ª—å—Ç–∞—Ç ‚Ññ {len(bonds)}: {bonds[-1]}.\n') 
                            else:
                                print(f"üö´ {get_function_name()}. –û–±–ª–∏–≥–∞—Ü–∏—è {bond_name} ({secid}) –≤ –≤—ã–±–æ—Ä–∫—É –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –µ—Å—Ç—å –¥–∞—Ç—ã –∫–æ–≥–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤—ã–ø–ª–∞—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã.\n") 
                        else:
                            print(f"üíß {get_function_name()}. –û–±–ª–∏–≥–∞—Ü–∏—è {bond_name} ({secid}) –≤ –≤—ã–±–æ—Ä–∫—É –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –∏–∑-–∑–∞ –º–∞–ª—ã—Ö –æ–±–æ—Ä–æ—Ç–æ–≤ –∏–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ –º–∞–ª–æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π.\n") 
                    else:
                         print(f'‚è≠Ô∏è {get_function_name()} –ü—Ä–æ–ø—É—Å–∫ {secid}: –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–∞–∑–æ–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.\n') 
                    retry_count = 5  # –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ

                except requests.exceptions.RequestException as e:
                    retry_count += 1
                    error_counter += 1
                    print(f"\n‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–æ–∫–∏ {i + 1}: {e}.\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ {retry_count} –∏–∑ 5. –û–∂–∏–¥–∞–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥.\n") 
                    time.sleep(60)  # –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                except Exception as e:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
                    retry_count += 1
                    error_counter += 1
                    print(f"\nüî• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–æ–∫–∏ {i + 1}: {e}.\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ {retry_count} –∏–∑ 5. –û–∂–∏–¥–∞–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥.\n") 

    if not bonds:
        print(f"üì≠ {get_function_name()}. –í –º–∞—Å—Å–∏–≤–µ –Ω–µ—Ç —Å—Ç—Ä–æ–∫.") 
        return conditions 

    bonds.sort(key=lambda x: x[4], reverse=True)  # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Å—Ç–æ–ª–±—Ü—É –û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –∑–∞ n –¥–Ω–µ–π, —à—Ç.

    if bonds:
        print(f"üìä {get_function_name()}. –ù–∞—á–∞–ª–æ –≤—ã–±–æ—Ä–∫–∏: {bonds[0]}, ...") 
    print(f"üêû {get_function_name()}. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ –≤ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ —Å –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–µ–π: {error_counter}, –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã.") 

    return bonds, conditions


async def moex_search_volume(security_id, threshold_value):
    """
    –û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ –≤ –∫–∞–∂–¥—ã–π –∏–∑ n –¥–Ω–µ–π –±–æ–ª—å—à–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ä–æ–≥–∞.
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ–± –æ–±—ä–µ–º–∞—Ö —Ç–æ—Ä–≥–æ–≤ –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π –æ–±–ª–∏–≥–∞—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 15 –¥–Ω–µ–π.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏, —Å—É–º–º–∞—Ä–Ω–æ–º –æ–±—ä–µ–º–µ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –ª–æ–≥–∞.
    """
    now = datetime.datetime.now()
    date_request_previous = (now - datetime.timedelta(days=15)).strftime('%Y-%m-%d')  # —ç—Ç–æ—Ç –¥–µ–Ω—å n –¥–Ω–µ–π –Ω–∞–∑–∞–¥
    board_id = await moex_board_id(security_id)
    if not board_id:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å board_id –¥–ª—è {security_id}. –ü–æ–∏—Å–∫ –æ–±—ä–µ–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω.") 
        return {'low_liquid': 1, 'value': 0, 'log': []}  # –õ–æ–≥ —Ç–µ–ø–µ—Ä—å –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç—Å—è stdout, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫

    url = f"https://iss.moex.com/iss/history/engines/stock/markets/bonds/boards/{board_id}/securities/{security_id}.json?iss.meta=off&iss.only=history&history.columns=SECID,TRADEDATE,VOLUME,NUMTRADES&limit=20&from={date_request_previous}"
    # numtrades - –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–æ–∫ —Å –±—É–º–∞–≥–æ–π
    # VOLUME - –æ–±–æ—Ä–æ—Ç –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –±—É–º–∞–≥ (–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫, —à—Ç)
    print(f'üîó {get_function_name()}. –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–±—ä—ë–º–∞ —Å–¥–µ–ª–æ–∫ {security_id}: {url}') 
    try:
        time.sleep(API_DELAY)  # –ó–∞–¥–µ—Ä–∂–∫–∞ API_DELAY —Å –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

        response = requests.get(url)
        response.raise_for_status()
        json_data = response.json()
        history_data = json_data['history']['data']

        count = len(history_data)
        volume_sum = 0
        low_liquid = 0
        for i in range(count):
            volume = history_data[i][2]
            volume_sum += volume
            if threshold_value > volume:  # –µ—Å–ª–∏ –æ–±–æ—Ä–æ—Ç –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å –º–µ–Ω—å—à–µ
                low_liquid = 1
                print(f"üìâ {get_function_name()}. –ù–∞ {i + 1}-–π –¥–µ–Ω—å ({history_data[i][1]}) –∏–∑ {count} –æ–±–æ—Ä–æ—Ç –ø–æ –±—É–º–∞–≥–µ {security_id} –º–µ–Ω—å—à–µ —á–µ–º {threshold_value}: {volume} —à—Ç.") 
            if count < 6:  # –µ—Å–ª–∏ –≤—Å–µ–≥–æ –¥–Ω–µ–π –≤ –∞–ø–∏ –Ω–∞ —ç—Ç–æ–º –ø–µ—Ä–∏–æ–¥–µ –æ—á–µ–Ω—å –º–∞–ª–æ
                low_liquid = 1
                print(f"‚ö†Ô∏è {get_function_name()}. –í—Å–µ–≥–æ –≤ –ê–ü–ò –ú–æ—Å–±–∏—Ä–∂–∏ –¥–æ—Å—Ç—É–ø–Ω–æ {count} –¥–Ω–µ–π, –∞ –Ω–∞–¥–æ —Ö–æ—Ç—è –±—ã –±–æ–ª—å—à–µ 6 —Ç–æ—Ä–≥–æ–≤—ã—Ö –¥–Ω–µ–π —Å {date_request_previous}!") 

        if low_liquid != 1:
            print(f"üìà {get_function_name()}. –í–æ –≤—Å–µ—Ö {count} –¥–Ω—è—Ö –æ–±–æ—Ä–æ—Ç –ø–æ –±—É–º–∞–≥–µ {security_id} –±—ã–ª –±–æ–ª—å—à–µ, —á–µ–º {threshold_value} —à—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.") 
        print(f"üìä {get_function_name()}. –ò—Ç–æ–≥–æ–≤—ã–π –æ–±–æ—Ä–æ—Ç –≤ –±—É–º–∞–≥–∞—Ö (–æ–±—ä–µ–º —Å–¥–µ–ª–æ–∫, —à—Ç) –∑–∞ {count} –¥–Ω–µ–π: {volume_sum} —à—Ç –Ω–∞—Ä–∞—Å—Ç–∞—é—â–∏–º –∏—Ç–æ–≥–æ–º.") 
        return {
            'low_liquid': low_liquid,
            'value': volume_sum
        }
    except requests.exceptions.RequestException as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ c {security_id} –≤ {get_function_name()}: {e}") 
        return {'low_liquid': 1, 'value': 0} 
    except Exception as e:
        print(f"üî• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ c {security_id} –≤ {get_function_name()}: {e}") 
        return {'low_liquid': 1, 'value': 0} 


async def moex_board_id(security_id):
    """
    –£–∑–Ω–∞–µ–º boardid –ª—é–±–æ–π –±—É–º–∞–≥–∏ –ø–æ —Ç–∏–∫–µ—Ä—É.
    –ü–æ–ª—É—á–∞–µ—Ç board_id –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π –æ–±–ª–∏–≥–∞—Ü–∏–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç board_id –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏.
    """
    url = f"https://iss.moex.com/iss/securities/{security_id}.json?iss.meta=off&iss.only=boards&boards.columns=secid,boardid,is_primary"
    try:
        time.sleep(API_DELAY)  # –ó–∞–¥–µ—Ä–∂–∫–∞ API_DELAY —Å –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

        response = requests.get(url)
        response.raise_for_status()
        json_data = response.json()

        board_id_data = json_data['boards']['data']
        primary_board = next((board[1] for board in board_id_data if board[2] == 1), None)  # –ù–∞—Ö–æ–¥–∏–º board_id –≥–¥–µ is_primary = 1

        if primary_board:
            return primary_board
        else:
            print(f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω primary board_id –¥–ª—è {security_id}.") 
            return None

    except requests.exceptions.RequestException as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ c {security_id} –≤ {get_function_name()}: {e}") 
        return None
    except Exception as e:
        print(f"üî• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ c {security_id} –≤ {get_function_name()}: {e}") 
        return None


async def moex_search_months_of_payments(security_id):
    """
    –£–∑–Ω–∞—ë–º –º–µ—Å—è—Ü—ã, –∫–æ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –≤—ã–ø–ª–∞—Ç—ã.
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∫—É–ø–æ–Ω–Ω—ã—Ö –≤—ã–ø–ª–∞—Ç–∞—Ö –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π –æ–±–ª–∏–≥–∞—Ü–∏–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–µ—Å—è—Ü–∞—Ö –≤—ã–ø–ª–∞—Ç, –Ω–∞–ª–∏—á–∏–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –≤—ã–ø–ª–∞—Ç –∏ months_payment_marks.
    """
    url = f"https://iss.moex.com/iss/statistics/engines/stock/markets/bonds/bondization/{security_id}.json?iss.meta=off&iss.only=coupons&start=0&limit=100"
    print(f'üîó {get_function_name()}. –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–µ—Å—è—Ü–µ–≤ –≤—ã–ø–ª–∞—Ç –¥–ª—è {security_id}: {url}.') 
    try:
        time.sleep(API_DELAY)  # –ó–∞–¥–µ—Ä–∂–∫–∞ API_DELAY —Å –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

        response = requests.get(url)
        response.raise_for_status()
        json_data = response.json()

        coupon_data = json_data['coupons']['data']

        coupon_dates = []
        value_rub_null = 0
        for i in range(len(coupon_data)):
            coupondate = coupon_data[i][3]  # –¥–∞—Ç—ã –∫—É–ø–æ–Ω–∞
            value_rub = coupon_data[i][9]  # —Å—É–º–º–∞ –≤—ã–ø–ª–∞—Ç—ã –∫—É–ø–æ–Ω–∞
            in_future = datetime.datetime.strptime(coupondate, '%Y-%m-%d') > datetime.datetime.now()
            if in_future:
                coupon_dates.append(int(coupondate.split("-")[1]))  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞
                if value_rub is None:
                    value_rub_null += 1

        if value_rub_null > 0:
            print(f"‚ö†Ô∏è {get_function_name()}. –î–ª—è {security_id} –µ—Å—Ç—å {value_rub_null} –¥–∞—Ç(—ã) –±—É–¥—É—â–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤—ã–ø–ª–∞—Ç.") 

        unique_dates = sorted(list(set(coupon_dates)))  # —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –º–µ—Å—è—Ü–µ–≤ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        print(f"üóìÔ∏è {get_function_name()}. –ö—É–ø–æ–Ω—ã –¥–ª—è {security_id} –≤—ã–ø–ª–∞—á–∏–≤–∞—é—Ç—Å—è –≤ {unique_dates} –º–µ—Å—è—Ü—ã.") 

        month_names_short_ru = ['—è–Ω–≤', '—Ñ–µ–≤', '–º–∞—Ä', '–∞–ø—Ä', '–º–∞–π', '–∏—é–Ω', '–∏—é–ª', '–∞–≤–≥', '—Å–µ–Ω', '–æ–∫—Ç', '–Ω–æ—è', '–¥–µ–∫']
        months_payment_marks = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç–º–µ—Ç–æ–∫ –º–µ—Å—è—Ü–µ–≤
        for month_num in range(1, 13):
            months_payment_marks[month_names_short_ru[month_num-1]] = "‚úÖ" if month_num in unique_dates else ""  # –û—Ç–º–µ—á–∞–µ–º –º–µ—Å—è—Ü—ã —Å –≤—ã–ø–ª–∞—Ç–∞–º–∏

        return {
            'value_rub_null': value_rub_null,
            'months_payment_marks': months_payment_marks  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –æ—Ç–º–µ—Ç–∫–∞–º–∏
        }

    except requests.exceptions.RequestException as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ c {security_id} –≤ {get_function_name()}: {e}") 
        return  {'value_rub_null': 0, 'months_payment_marks': {}}  
    except Exception as e:
        print(f"üî• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ c {security_id} –≤ {get_function_name()}: {e}") 
        return  {'value_rub_null': 0, 'months_payment_marks': {}}  


async def moex_search_is_qualified_investors(security_id):
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ–º —ç—Ç–æ –±—É–º–∞–≥–∞ –¥–ª—è –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏–ª–∏ –Ω–µ—Ç.
    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –æ–±–ª–∏–≥–∞—Ü–∏–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.
    """
    url = f"https://iss.moex.com/iss/securities/{security_id}.json?iss.meta=off&iss.only=description&description.columns=name,title,value"
    print(f'üîó {get_function_name()}. –°—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ {security_id}: {url}') 
    try:

        time.sleep(API_DELAY)  # –ó–∞–¥–µ—Ä–∂–∫–∞ API_DELAY —Å –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

        response = requests.get(url)
        response.raise_for_status()
        json_data = response.json()
        description_data = json_data['description']['data']

        is_qualified_investors_data = next((item for item in description_data if item[0] == 'ISQUALIFIEDINVESTORS'), None)
        qual_investor_group_data = next((item for item in description_data if item[0] == 'QUALINVESTORGROUP'), None)

        is_qualified_investors = int(is_qualified_investors_data[2]) if is_qualified_investors_data and is_qualified_investors_data[2] else 0  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 0, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        qual_investor_group = qual_investor_group_data[2] if qual_investor_group_data and qual_investor_group_data[2] else "–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞"  # –¢–µ–∫—Å—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω

        if is_qualified_investors == 0:
            print(f"üë§ {get_function_name()}. –î–ª—è {security_id} –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ù–ï –Ω—É–∂–Ω–∞.") 
            return '–Ω–µ—Ç'
        else:
            print(f"üë®‚Äçüíº {get_function_name()}. {security_id} —ç—Ç–æ –±—É–º–∞–≥–∞ –¥–ª—è –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: \"{qual_investor_group}\"") 
            return '–¥–∞'

    except requests.exceptions.RequestException as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ c {security_id} –≤ {get_function_name()}: {e}") 
        return '–æ—à–∏–±–∫–∞'  # Return some error indicator
    except Exception as e:
        print(f"üî• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ c {security_id} –≤ {get_function_name()}: {e}") 
        return '–æ—à–∏–±–∫–∞'  # Return some error indicator


def write_to_excel(bonds, excel_log_messages, filename, conditions):
    """
    –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –æ–±–ª–∏–≥–∞—Ü–∏–π –∏ –ª–æ–≥ –≤ Excel —Ñ–∞–π–ª.
    –°–æ–∑–¥–∞–µ—Ç –¥–≤–µ –≤–∫–ª–∞–¥–∫–∏: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞' –∏ '–õ–æ–≥'.
    """
    wb = openpyxl.Workbook()

    # –õ–∏—Å—Ç '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞'
    sheet_bonds = wb.active
    sheet_bonds.title = '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞'
    headers_bonds = ['–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '–ö–æ–¥ —Ü–µ–Ω–Ω–æ–π –±—É–º–∞–≥–∏', '–ù—É–∂–Ω–∞ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è?', '–¶–µ–Ω–∞, %', '–û–±—ä–µ–º —Å–¥–µ–ª–æ–∫ —Å 15 –¥–Ω–µ–π, —à—Ç.', '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å', '–î—é—Ä–∞—Ü–∏—è, –º–µ—Å—è—Ü–µ–≤']
    month_names_full_ru = ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å', '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å']  # –ü–æ–ª–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–µ–≤ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    headers_bonds.extend(month_names_full_ru)  # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –º–µ—Å—è—Ü–µ–≤
    sheet_bonds.append(headers_bonds)

    sheet_bonds = wb["–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞"]

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ E –∫–∞–∫ "# ##0"
    for cell in sheet_bonds["E"][1:]:
       cell.number_format = '# ##0'

    # volume_column = sheet_bonds['E']
    # number_format = "#,##0"
    # for cell in volume_column:
    #     cell.number_format = number_format        

    for bond_data in bonds:
        bond_row = bond_data[:7]  # –ü–µ—Ä–≤—ã–µ 7 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        payment_marks = bond_data[7]  # –°–ª–æ–≤–∞—Ä—å —Å –æ—Ç–º–µ—Ç–∫–∞–º–∏ –º–µ—Å—è—Ü–µ–≤
        month_marks_list = [payment_marks.get(month, "") for month in month_names_short_ru]  # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–º–µ—Ç–∫–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –º–µ—Å—è—Ü–µ–≤
        bond_row.extend(month_marks_list)  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–º–µ—Ç–∫–∏ –º–µ—Å—è—Ü–µ–≤ –≤ —Å—Ç—Ä–æ–∫—É
        sheet_bonds.append(bond_row)

    # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ª–∏—Å—Ç–µ '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞'
    center_alignment = Alignment(horizontal='center')
    for row in sheet_bonds.iter_rows(min_row=1, max_row=sheet_bonds.max_row, min_col=1, max_col=sheet_bonds.max_column):  
        for cell in row:
            cell.alignment = center_alignment

    # –ê–≤—Ç–æ–ø–æ–¥–±–æ—Ä —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Å—Ç–∞
    for column_cells in sheet_bonds.columns:
        length = max(len(str(cell.value)) for cell in column_cells if cell.value)
        sheet_bonds.column_dimensions[openpyxl.utils.get_column_letter(column_cells[0].col_idx)].width = length + 2 

    # –§–∏–∫—Å–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É (–∑–∞–≥–æ–ª–æ–≤–∫–∏)
    sheet_bonds.freeze_panes = 'A2'

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ª–æ–≤–∏—è—Ö –ø–æ–∏—Å–∫–∞ –ø–æ—Å–ª–µ —Ç–∞–±–ª–∏—Ü—ã
    last_row = sheet_bonds.max_row + 2  # –î–≤–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏
    sheet_bonds.cell(row=last_row, column=1, value=f"–í—ã–±–æ—Ä–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ {datetime.datetime.now().strftime('%d.%m.%Y %H:%M:%S')} –ø–æ —É—Å–ª–æ–≤–∏—è–º:")

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω A:D –¥–ª—è —É—Å–ª–æ–≤–∏–π
    merge_range = f"A{last_row + 1}:D{last_row + 1}"
    sheet_bonds.merge_cells(merge_range)
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É —Å—Ç—Ä–æ–∫–∏ (100)
    sheet_bonds.row_dimensions[last_row + 1].height = 100

    # –î–æ–±–∞–≤–ª—è–µ–º —É—Å–ª–æ–≤–∏—è –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    cell = sheet_bonds.cell(row=last_row + 1, column=1, value=conditions)
    cell.alignment = openpyxl.styles.Alignment(wrap_text=True, vertical="top") # –ü–µ—Ä–µ–Ω–æ—Å —Ç–µ–∫—Å—Ç–∞ –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –≤–µ—Ä—Ö—É

    # –î–æ–±–∞–≤–ª—è–µ–º –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∏
    hyperlink_row = last_row + 3  # –°—Ç—Ä–æ–∫–∞ –¥–ª—è –≥–∏–ø–µ—Ä—Å—Å—ã–ª–æ–∫
    hyperlink_cell_author = sheet_bonds.cell(row=hyperlink_row, column=1)
    hyperlink_cell_script = sheet_bonds.cell(row=hyperlink_row + 1, column=1)

    hyperlink_cell_author.value = "–°–æ—Å—Ç–∞–≤–∏–ª –ú–∏—Ö–∞–∏–ª –®–∞—Ä–¥–∏–Ω" 
    hyperlink_cell_script.value = "–ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ –ª–∏–∫–≤–∏–¥–Ω—ã—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π –≤ —Å—Ç–∞—Ç—å–µ –Ω–∞ GitHub" 

    hyperlink_cell_author.hyperlink = "https://shardin.name/"
    hyperlink_cell_author.style = 'Hyperlink'

    hyperlink_cell_script.hyperlink = "https://github.com/empenoso/moex-bond-search-and-analysis"
    hyperlink_cell_script.style = 'Hyperlink'

    # –õ–∏—Å—Ç '–õ–æ–≥'
    sheet_log = wb.create_sheet('–õ–æ–≥')
    sheet_log.title = '–õ–æ–≥'
    sheet_log.column_dimensions['A'].width = 150  
    headers_log = ['–°–æ–±—ã—Ç–∏–µ']
    sheet_log.append(headers_log)
    for log_entry in excel_log_messages:  
        sheet_log.append([log_entry])

    wb.save(filename)

month_names_short_ru = ['—è–Ω–≤', '—Ñ–µ–≤', '–º–∞—Ä', '–∞–ø—Ä', '–º–∞–π', '–∏—é–Ω', '–∏—é–ª', '–∞–≤–≥', '—Å–µ–Ω', '–æ–∫—Ç', '–Ω–æ—è', '–¥–µ–∫']  # –ö–æ—Ä–æ—Ç–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–µ–≤ –¥–ª—è –ø–æ—Ä—è–¥–∫–∞ —Å—Ç–æ–ª–±—Ü–æ–≤

if __name__ == "__main__":
    asyncio.run(start())